{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/defaultProfile.svg","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendListItem/defaultProfile.svg","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","ProfileStyles","profile","src","alt","width","label","quantity","followers","views","likes","defaultProps","defaultProfileImg","randomColor","color","count","Math","floor","random","Statistics","title","StatisticsStyles","statistics","statList","map","stat","item","style","backgroundColor","percentage","id","FriendListItem","status","isOnline","FriendListItemStyles","online","offline","FriendList","friendsList","FriendListStyles","friendList","friend","TransactionHistory","items","TransactionHistoryStyles","transactionHistory","type","amount","currency","App","user","statisticalData","friends","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,MAAQ,uBAAuB,SAAW,4B,iBCA5PD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,SAAW,6BAA6B,KAAO,yBAAyB,MAAQ,0BAA0B,WAAa,iC,gBCAvND,EAAOC,QAAU,CAAC,KAAO,6BAA6B,OAAS,+BAA+B,OAAS,4DAA4D,QAAU,6DAA6D,OAAS,+BAA+B,KAAO,+B,sgBCAzRD,EAAOC,QAAU,CAAC,WAAa,iC,gBCA/BD,EAAOC,QAAU,CAAC,mBAAqB,iD,yqFCDxB,MAA0B,2C,uBCKnCC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAKC,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,MAAhC,OACZ,sBAAKC,UAAWC,IAAcC,QAA9B,UACI,sBAAKF,UAAU,cAAf,UACI,qBACIG,IAAKL,EACLM,IAAI,gHACJC,MAAM,MACNL,UAAWC,IAAcH,SAE7B,mBAAGE,UAAWC,IAAcN,KAA5B,SAAmCA,IACnC,mBAAGK,UAAWC,IAAcL,IAA5B,SAAkCA,IAClC,mBAAGI,UAAWC,IAAcJ,SAA5B,SAAuCA,OAG3C,qBAAIG,UAAWC,IAAcF,MAA7B,UACI,+BACI,sBAAMC,UAAWC,IAAcK,MAA/B,uBACA,sBAAMN,UAAWC,IAAcM,SAA/B,SACKR,EAAMS,eAGf,+BACI,sBAAMR,UAAWC,IAAcK,MAA/B,mBACA,sBAAMN,UAAWC,IAAcM,SAA/B,SAA0CR,EAAMU,WAEpD,+BACI,sBAAMT,UAAWC,IAAcK,MAA/B,mBACA,sBAAMN,UAAWC,IAAcM,SAA/B,SAA0CR,EAAMW,kBAMhEhB,EAAQiB,aAAe,CACnBb,OAAQc,GAeGlB,Q,gBClDf,SAASmB,IAGL,IAFA,IAAIC,EAAQ,GACRC,EAAQ,EACLA,GACHD,GAAK,UAAOE,KAAKC,MAAsB,IAAhBD,KAAKE,UAAvB,KACLH,IAEJ,MAAM,OAAN,OAAcD,EAAd,KAGJ,IAgCeK,EAhCI,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOrB,EAAV,EAAUA,MAAV,OACf,0BAASC,UAAWqB,IAAiBC,WAArC,UACKF,GAAS,oBAAIpB,UAAWqB,IAAiBD,MAAhC,SAAwCA,IAElD,oBAAIpB,UAAWqB,IAAiBE,SAAhC,SACKxB,EAAMyB,KAAI,SAAAC,GAAI,OACX,qBACIzB,UAAWqB,IAAiBK,KAE5BC,MAAO,CAAEC,gBAAiBf,KAH9B,UAKI,sBAAMb,UAAWqB,IAAiBf,MAAlC,SAA0CmB,EAAKnB,QAC/C,sBAAMN,UAAWqB,IAAiBQ,WAAlC,SACKJ,EAAKI,eALLJ,EAAKK,aCtBf,MAA0B,2C,gBCKnCC,EAAiB,SAAC,GAAgC,IAA9BjC,EAA6B,EAA7BA,OAAQH,EAAqB,EAArBA,KACxBqC,EAD6C,EAAfC,SAE9BC,IAAqBC,OACrBD,IAAqBE,QAC3B,OACI,qBAAIpC,UAAWkC,IAAqBR,KAApC,UACI,sBAAM1B,UAAWgC,IACjB,qBACIhC,UAAWkC,IAAqBpC,OAChCK,IAAKL,EACLM,IAAKT,EACLU,MAAM,OAEV,mBAAGL,UAAWkC,IAAqBvC,KAAnC,SAA0CA,QAKtDoC,EAAepB,aAAe,CAC1Bb,OAAQc,GASGmB,Q,gBCPAM,EArBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACf,oBAAItC,UAAWuC,IAAiBC,WAAhC,SACKF,EAAYd,KAAI,SAAAiB,GAAM,OACnB,cAAC,EAAD,CAEI3C,OAAQ2C,EAAO3C,OACfH,KAAM8C,EAAO9C,KACbsC,SAAUQ,EAAOR,UAHZQ,EAAOX,U,iBC4BbY,EAjCY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,wBAAO3C,UAAW4C,IAAyBC,mBAA3C,UACI,gCACI,+BACI,sCACA,wCACA,+CAIR,gCACKF,EAAMnB,KAAI,gBAAGM,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,SAArB,OACP,+BACI,6BAAKF,IACL,6BAAKC,IACL,6BAAKC,MAHAlB,Y,8BCWVmB,EAjBH,kBACR,gCACI,mDACA,cAAC,EAAD,CACItD,KAAMuD,EAAKvD,KACXC,IAAKsD,EAAKtD,IACVC,SAAUqD,EAAKrD,SACfC,OAAQoD,EAAKpD,OACbC,MAAOmD,EAAKnD,QAEhB,cAAC,EAAD,CAAYqB,MAAM,eAAerB,MAAOoD,IACxC,cAAC,EAAD,CAAYpD,MAAOoD,IACnB,cAAC,EAAD,CAAYb,YAAac,IACzB,cAAC,EAAD,CAAoBT,MAAOU,QClBnCC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.1d07e38a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__a275d\",\"avatar\":\"Profile_avatar__1Lua5\",\"name\":\"Profile_name__Seq3x\",\"tag\":\"Profile_tag__3RRdc\",\"location\":\"Profile_location__35ZOQ\",\"stats\":\"Profile_stats__2nxCs\",\"label\":\"Profile_label__2Ta0V\",\"quantity\":\"Profile_quantity__1orm7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__6782J\",\"title\":\"Statistics_title__zGn8i\",\"statList\":\"Statistics_statList__3HsXG\",\"item\":\"Statistics_item__1abIO\",\"label\":\"Statistics_label__3HPjS\",\"percentage\":\"Statistics_percentage__2BzpE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__ZrvpW\",\"status\":\"FriendListItem_status__FR3nP\",\"online\":\"FriendListItem_online__33VUX FriendListItem_status__FR3nP\",\"offline\":\"FriendListItem_offline__1jP_j FriendListItem_status__FR3nP\",\"avatar\":\"FriendListItem_avatar__3HAXW\",\"name\":\"FriendListItem_name__3jalC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__3x78Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__20Awt\"};","export default __webpack_public_path__ + \"static/media/defaultProfile.15422c43.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport defaultProfileImg from './defaultProfile.svg';\nimport ProfileStyles from './Profile.module.css';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => (\n    <div className={ProfileStyles.profile}>\n        <div className=\"description\">\n            <img\n                src={avatar}\n                alt=\"Аватар пользователя\"\n                width=\"320\"\n                className={ProfileStyles.avatar}\n            />\n            <p className={ProfileStyles.name}>{name}</p>\n            <p className={ProfileStyles.tag}>{tag}</p>\n            <p className={ProfileStyles.location}>{location}</p>\n        </div>\n\n        <ul className={ProfileStyles.stats}>\n            <li>\n                <span className={ProfileStyles.label}>Followers</span>\n                <span className={ProfileStyles.quantity}>\n                    {stats.followers}\n                </span>\n            </li>\n            <li>\n                <span className={ProfileStyles.label}>Views</span>\n                <span className={ProfileStyles.quantity}>{stats.views}</span>\n            </li>\n            <li>\n                <span className={ProfileStyles.label}>Likes</span>\n                <span className={ProfileStyles.quantity}>{stats.likes}</span>\n            </li>\n        </ul>\n    </div>\n);\n\nProfile.defaultProps = {\n    avatar: defaultProfileImg,\n};\n\nProfile.propTypes = {\n    avatar: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    stats: PropTypes.shape({\n        followers: PropTypes.number.isRequired,\n        views: PropTypes.number.isRequired,\n        likes: PropTypes.number.isRequired,\n    }).isRequired,\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes, { shape } from 'prop-types';\nimport StatisticsStyles from './Statistics.module.css';\n\nfunction randomColor() {\n    let color = '';\n    let count = 3;\n    while (count) {\n        color += `${Math.floor(Math.random() * 255)} `;\n        count--;\n    }\n    return `rgb(${color})`;\n}\n\nconst Statistics = ({ title, stats }) => (\n    <section className={StatisticsStyles.statistics}>\n        {title && <h2 className={StatisticsStyles.title}>{title}</h2>}\n\n        <ul className={StatisticsStyles.statList}>\n            {stats.map(stat => (\n                <li\n                    className={StatisticsStyles.item}\n                    key={stat.id}\n                    style={{ backgroundColor: randomColor() }}\n                >\n                    <span className={StatisticsStyles.label}>{stat.label}</span>\n                    <span className={StatisticsStyles.percentage}>\n                        {stat.percentage}\n                    </span>\n                </li>\n            ))}\n        </ul>\n    </section>\n);\n\nStatistics.propTypes = {\n    title: PropTypes.string,\n    stats: PropTypes.arrayOf(\n        shape({\n            id: PropTypes.string.isRequired,\n            label: PropTypes.string.isRequired,\n            percentage: PropTypes.number.isRequired,\n        }).isRequired,\n    ).isRequired,\n};\n\nexport default Statistics;\n","export default __webpack_public_path__ + \"static/media/defaultProfile.15422c43.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport defaultProfileImg from './defaultProfile.svg';\nimport FriendListItemStyles from './FriendListItem.module.css';\n\nconst FriendListItem = ({ avatar, name, isOnline }) => {\n    const status = isOnline\n        ? FriendListItemStyles.online\n        : FriendListItemStyles.offline;\n    return (\n        <li className={FriendListItemStyles.item}>\n            <span className={status}></span>\n            <img\n                className={FriendListItemStyles.avatar}\n                src={avatar}\n                alt={name}\n                width=\"48\"\n            />\n            <p className={FriendListItemStyles.name}>{name}</p>\n        </li>\n    );\n};\n\nFriendListItem.defaultProps = {\n    avatar: defaultProfileImg,\n};\n\nFriendListItem.propTypes = {\n    avatar: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FriendListItem from '../FriendListItem/FriendListItem';\nimport FriendListStyles from './FriendList.module.css';\n\nconst FriendList = ({ friendsList }) => (\n    <ul className={FriendListStyles.friendList}>\n        {friendsList.map(friend => (\n            <FriendListItem\n                key={friend.id}\n                avatar={friend.avatar}\n                name={friend.name}\n                isOnline={friend.isOnline}\n            />\n        ))}\n    </ul>\n);\n\nFriendList.propTypes = {\n    friendsList: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n        }).isRequired,\n    ).isRequired,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TransactionHistoryStyles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n    <table className={TransactionHistoryStyles.transactionHistory}>\n        <thead>\n            <tr>\n                <th>Type</th>\n                <th>Amount</th>\n                <th>Currency</th>\n            </tr>\n        </thead>\n\n        <tbody>\n            {items.map(({ id, type, amount, currency }) => (\n                <tr key={id}>\n                    <td>{type}</td>\n                    <td>{amount}</td>\n                    <td>{currency}</td>\n                </tr>\n            ))}\n        </tbody>\n    </table>\n);\n\nTransactionHistory.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            type: PropTypes.string.isRequired,\n            amount: PropTypes.string.isRequired,\n            currency: PropTypes.string.isRequired,\n        }).isRequired,\n    ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport user from './user.json';\nimport statisticalData from './statistical-data.json';\nimport friends from './friends.json';\nimport transactions from './transactions.json';\n\nconst App = () => (\n    <div>\n        <h1>react-homework-01</h1>\n        <Profile\n            name={user.name}\n            tag={user.tag}\n            location={user.location}\n            avatar={user.avatar}\n            stats={user.stats}\n        />\n        <Statistics title=\"Upload stats\" stats={statisticalData} />\n        <Statistics stats={statisticalData} />\n        <FriendList friendsList={friends} />\n        <TransactionHistory items={transactions} />\n    </div>\n);\n\nexport default App;\n","import React from 'react';\nimport 'modern-normalize/modern-normalize.css';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}